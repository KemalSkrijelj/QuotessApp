{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\computer\\\\Desktop\\\\QuotesApp\\\\client\\\\src\\\\pages\\\\LoginPage\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { Field, Form, Formik } from \"formik\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setLoggedInUser\n  } = useContext(AppContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    const user = {\n      email,\n      password\n    };\n    const localUserString = localStorage.getItem(\"user\");\n    const localUser = JSON.parse(localUserString);\n    if (user.email === localUser.email && user.password === localUser.password) {\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n      setLoggedInUser(user);\n      navigate(\"/\");\n    } else {\n      alert(\"Nisu ispravni kredencijali.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    children: props => /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form-auth\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"40vh\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        style: {\n          display: \"flex\",\n          width: \"100%\",\n          flexDirection: \"column\",\n          gap: \"20px\",\n          mar\n        },\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"svcMqfEEh77iok7BtrM7Wpgzsss=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Field","Form","Formik","AppContext","useContext","useState","useNavigate","Login","navigate","setLoggedInUser","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","user","localUserString","localStorage","getItem","localUser","JSON","parse","setItem","stringify","alert","props","display","flexDirection","minHeight","alignItems","width","gap","mar","e","target","value"],"sources":["C:/Users/computer/Desktop/QuotesApp/client/src/pages/LoginPage/Login.jsx"],"sourcesContent":["import { Field, Form, Formik } from \"formik\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const { setLoggedInUser } = useContext(AppContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    const localUserString = localStorage.getItem(\"user\");\r\n    const localUser = JSON.parse(localUserString);\r\n    if (\r\n      user.email === localUser.email &&\r\n      user.password === localUser.password\r\n    ) {\r\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\r\n      setLoggedInUser(user);\r\n      navigate(\"/\");\r\n    } else {\r\n      alert(\"Nisu ispravni kredencijali.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik>\r\n      {(props) => (\r\n        <Form className=\"form-auth\" style={{display:\"flex\",flexDirection:\"column\", minHeight: \"40vh\", alignItems: \"center\" }}>\r\n          <h1>Login</h1>\r\n          <div\r\n            className=\"inputs\"\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              flexDirection: \"column\",\r\n              gap: \"20px\",\r\n              mar\r\n            }}\r\n          >\r\n            <Field\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Field\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button className=\"submit\" type=\"submit\" onClick={handleSubmit}>\r\n            Submit\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAC5C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAM;IAAEG;EAAgB,CAAC,GAAGL,UAAU,CAACD,UAAU,CAAC;EAClD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,IAAI,GAAG;MACXP,KAAK;MACLE;IACF,CAAC;IACD,MAAMM,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACpD,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;IAC7C,IACED,IAAI,CAACP,KAAK,KAAKW,SAAS,CAACX,KAAK,IAC9BO,IAAI,CAACL,QAAQ,KAAKS,SAAS,CAACT,QAAQ,EACpC;MACAO,YAAY,CAACK,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;MAC1DR,eAAe,CAACQ,IAAI,CAAC;MACrBT,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLkB,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACE,QAAC,MAAM;IAAA,UACHC,KAAK,iBACL,QAAC,IAAI;MAAC,SAAS,EAAC,WAAW;MAAC,KAAK,EAAE;QAACC,OAAO,EAAC,MAAM;QAACC,aAAa,EAAC,QAAQ;QAAEC,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA,wBACnH;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACd;QACE,SAAS,EAAC,QAAQ;QAClB,KAAK,EAAE;UACLH,OAAO,EAAE,MAAM;UACfI,KAAK,EAAE,MAAM;UACbH,aAAa,EAAE,QAAQ;UACvBI,GAAG,EAAE,MAAM;UACXC;QACF,CAAE;QAAA,wBAEF,QAAC,KAAK;UACJ,IAAI,EAAC,OAAO;UACZ,IAAI,EAAC,OAAO;UACZ,WAAW,EAAC,kBAAkB;UAC9B,KAAK,EAAExB,KAAM;UACb,QAAQ,EAAGyB,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC1C,eACF,QAAC,KAAK;UACJ,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,qBAAqB;UACjC,KAAK,EAAEzB,QAAS;UAChB,QAAQ,EAAGuB,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC7C;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAQ,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEvB,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEtD;IAAA;MAAA;MAAA;MAAA;IAAA;EAEZ;IAAA;IAAA;IAAA;EAAA,QACM;AAEb,CAAC;AAAC,GA/DIP,KAAK;EAAA,QACQD,WAAW;AAAA;AAAA,KADxBC,KAAK;AAiEX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}