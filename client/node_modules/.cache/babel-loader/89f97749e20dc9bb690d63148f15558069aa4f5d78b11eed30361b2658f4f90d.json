{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\computer\\\\Desktop\\\\QuotesApp\\\\client\\\\src\\\\pages\\\\QuotesPage\\\\QuotesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Quote from \"../../components/Quote/Quote\";\nimport \"./QuotesPage.css\";\nimport { Pagination, Select, MultiSelect } from \"@mantine/core\";\nimport AddQuote from \"../../components/modals/AddQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuotesPage = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [activePage, setPage] = useState(1);\n  const [valueFilter, setValueFilter] = useState([]);\n  const [valueSelect, setValueSelect] = useState(\"createdAt\");\n  const [addQuote, setAddQuote] = useState(false);\n  const tagsString = valueFilter.toString();\n  const [tags, setTags] = useState([]);\n  const dataToShowFilter = tags.map(tag => {\n    return {\n      value: tag,\n      label: `${tag[0].toUpperCase()}${tag.slice(1, tag.length)}`\n    };\n  });\n  const dataSort = [{\n    value: \"author\",\n    label: \"Author\"\n  }, {\n    value: \"content\",\n    label: \"Content\"\n  }, {\n    value: \"createdAt\",\n    label: \"Date of create\"\n  }, {\n    value: \"downvotesCount\",\n    label: \"Down Votes Count\"\n  }, {\n    value: \"upvotesCount\",\n    label: \"Up Votes Count\"\n  }];\n  const sortDirection = valueSelect === \"author\" || valueSelect === \"content\" ? \"asc\" : \"desc\";\n  const pageSize = 5;\n  const [totalQuotes, setTotalQuotes] = useState(1);\n  const totalPages = Math.ceil(totalQuotes / pageSize);\n  const getTags = () => {\n    axios.get(`http://localhost:8000/tags`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      // console.log(response.data);\n      setTags(response.data);\n    }).catch(error => {\n      // console.log(error);\n    });\n  };\n  useEffect(() => {\n    getTags();\n    axios.get(`http://localhost:8000/quotes?pageSize=${pageSize}&page=${activePage}&tags=${tagsString}&sortBy=${`${valueSelect}`}&sortDirection=${sortDirection}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setQuotes(response.data.quotes);\n      setTotalQuotes(response.data.quotesCount);\n      // console.log(response.data.quotes);\n    }).catch(error => {\n      // console.log(error);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activePage, totalQuotes, valueFilter, valueSelect, addQuote]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quotes\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quotes-func\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        label: \"Sort Quotes by:\",\n        placeholder: \"Select a Property\",\n        data: dataSort,\n        value: valueSelect,\n        onChange: setValueSelect,\n        clearable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n        style: {\n          maxWidth: \"50%\"\n        },\n        data: dataToShowFilter,\n        label: \"Select tags to filter Quotes:\",\n        placeholder: \"Pick tags that you like\",\n        value: valueFilter,\n        onChange: setValueFilter,\n        nothingFound: \"Nothing found\",\n        clearButtonLabel: \"Clear selection\",\n        clearable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddQuote, {\n        render: setAddQuote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), quotes.map(quote => /*#__PURE__*/_jsxDEV(Quote, {\n      content: quote.content,\n      authorName: quote.author,\n      upvotesCount: quote.upvotesCount,\n      downvotesCount: quote.downvotesCount,\n      givenVote: quote.givenVote,\n      id: quote.id\n    }, quote.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination\",\n      page: activePage,\n      onChange: setPage,\n      onClick: window.scrollTo(0, 0),\n      total: totalPages,\n      color: \"teal\",\n      radius: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(QuotesPage, \"PIP6UAMsj2UU7JfPPkxJrWPTOE8=\");\n_c = QuotesPage;\nexport default QuotesPage;\nvar _c;\n$RefreshReg$(_c, \"QuotesPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Quote","Pagination","Select","MultiSelect","AddQuote","QuotesPage","quotes","setQuotes","activePage","setPage","valueFilter","setValueFilter","valueSelect","setValueSelect","addQuote","setAddQuote","tagsString","toString","tags","setTags","dataToShowFilter","map","tag","value","label","toUpperCase","slice","length","dataSort","sortDirection","pageSize","totalQuotes","setTotalQuotes","totalPages","Math","ceil","getTags","get","headers","Authorization","localStorage","getItem","then","response","data","catch","error","quotesCount","maxWidth","quote","content","author","upvotesCount","downvotesCount","givenVote","id","window","scrollTo"],"sources":["C:/Users/computer/Desktop/QuotesApp/client/src/pages/QuotesPage/QuotesPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Quote from \"../../components/Quote/Quote\";\r\nimport \"./QuotesPage.css\";\r\nimport { Pagination, Select, MultiSelect } from \"@mantine/core\";\r\nimport AddQuote from \"../../components/modals/AddQuote\";\r\n\r\nconst QuotesPage = () => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [activePage, setPage] = useState(1);\r\n  const [valueFilter, setValueFilter] = useState([]);\r\n  const [valueSelect, setValueSelect] = useState(\"createdAt\");\r\n  const [addQuote, setAddQuote] = useState(false);\r\n  const tagsString = valueFilter.toString();\r\n  const [tags, setTags] = useState([]);\r\n  const dataToShowFilter = tags.map((tag) => {\r\n    return {\r\n      value: tag,\r\n      label: `${tag[0].toUpperCase()}${tag.slice(1, tag.length)}`,\r\n    };\r\n  });\r\n\r\n  const dataSort = [\r\n    { value: \"author\", label: \"Author\" },\r\n    { value: \"content\", label: \"Content\" },\r\n    { value: \"createdAt\", label: \"Date of create\" },\r\n    { value: \"downvotesCount\", label: \"Down Votes Count\" },\r\n    { value: \"upvotesCount\", label: \"Up Votes Count\" },\r\n  ];\r\n  const sortDirection =\r\n    valueSelect === \"author\" || valueSelect === \"content\" ? \"asc\" : \"desc\";\r\n  const pageSize = 5;\r\n  const [totalQuotes, setTotalQuotes] = useState(1);\r\n  const totalPages = Math.ceil(totalQuotes / pageSize);\r\n\r\n  const getTags = () => {\r\n    axios\r\n      .get(`http://localhost:8000/tags`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setTags(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTags();\r\n    axios\r\n      .get(\r\n        `http://localhost:8000/quotes?pageSize=${pageSize}&page=${activePage}&tags=${tagsString}&sortBy=${`${valueSelect}`}&sortDirection=${sortDirection}`,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setQuotes(response.data.quotes);\r\n        setTotalQuotes(response.data.quotesCount);\r\n        // console.log(response.data.quotes);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activePage, totalQuotes, valueFilter, valueSelect, addQuote]);\r\n  return (\r\n    <div className=\"quotes\">\r\n      <div className=\"quotes-func\">\r\n        <Select\r\n          label=\"Sort Quotes by:\"\r\n          placeholder=\"Select a Property\"\r\n          data={dataSort}\r\n          value={valueSelect}\r\n          onChange={setValueSelect}\r\n          clearable\r\n        />\r\n        <MultiSelect\r\n          style={{ maxWidth: \"50%\" }}\r\n          data={dataToShowFilter}\r\n          label=\"Select tags to filter Quotes:\"\r\n          placeholder=\"Pick tags that you like\"\r\n          value={valueFilter}\r\n          onChange={setValueFilter}\r\n          nothingFound=\"Nothing found\"\r\n          clearButtonLabel=\"Clear selection\"\r\n          clearable\r\n        />\r\n        <AddQuote render={setAddQuote} />\r\n      </div>\r\n      {quotes.map((quote) => (\r\n        <Quote\r\n          key={quote.id}\r\n          content={quote.content}\r\n          authorName={quote.author}\r\n          upvotesCount={quote.upvotesCount}\r\n          downvotesCount={quote.downvotesCount}\r\n          givenVote={quote.givenVote}\r\n          id={quote.id}\r\n        />\r\n      ))}\r\n\r\n      <Pagination\r\n        className=\"pagination\"\r\n        page={activePage}\r\n        onChange={setPage}\r\n        onClick={window.scrollTo(0, 0)}\r\n        total={totalPages}\r\n        color=\"teal\"\r\n        radius=\"md\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotesPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}