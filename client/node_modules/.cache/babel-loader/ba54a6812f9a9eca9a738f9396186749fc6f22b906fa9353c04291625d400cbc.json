{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\computer\\\\Desktop\\\\QuotesApp\\\\client\\\\src\\\\components\\\\modals\\\\AddQuote.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Button, Group, TextInput, Box } from \"@mantine/core\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddQuote = _ref => {\n  _s();\n  let {\n    render\n  } = _ref;\n  const [opened, setOpened] = useState(false);\n  const [userInput, setUserInput] = useState({\n    content: \"\",\n    author: \"\",\n    tags: \"\"\n  });\n  const handleNewQuote = event => {\n    event.preventDefault();\n    axios.post(`http://localhost:8000/quotes`, {\n      content: userInput.content,\n      author: userInput.author,\n      tags: userInput.tags.split(\",\")\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      render(prev => !prev);\n      // console.log(response.data);\n      setTimeout(() => setUserInput({\n        content: \"\",\n        author: \"\",\n        tags: \"\"\n      }), 100);\n      setTimeout(() => setOpened(false), 200);\n      toast(\"Successfully added a new Quote!\", {\n        icon: \"🎉\",\n        style: {\n          borderRadius: \"0.8rem\",\n          backgroundColor: \"#4e7768\",\n          color: \"#f0fffa\",\n          boxShadow: \"rgba(0, 0, 0, 0.6) 0px 4px 6px -1px, rgba(0, 0, 0, 0.2) 0px 2px 4px -1px\"\n        }\n      });\n    }).catch(error => {\n      render(prev => !prev);\n      // console.log(error.response.data)\n    });\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [render]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      opened: opened,\n      onClose: () => setOpened(false),\n      title: \"Add a new Quote\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 340\n        },\n        mx: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewQuote,\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            withAsterisk: true,\n            label: \"Content\",\n            placeholder: \"Enter the Content of the Quote\",\n            value: userInput.content,\n            onChange: event => setUserInput(prev => ({\n              ...prev,\n              content: event.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            withAsterisk: true,\n            label: \"Author\",\n            placeholder: \"Enter the Author of the Quote\",\n            value: userInput.author,\n            onChange: event => setUserInput(prev => ({\n              ...prev,\n              author: event.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            withAsterisk: true,\n            label: \"Tags\",\n            placeholder: \"Enter the Tags of the Quote\",\n            value: userInput.tags,\n            onChange: event => setUserInput(prev => ({\n              ...prev,\n              tags: event.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Group, {\n            position: \"right\",\n            mt: \"xl\",\n            style: {\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              uppercase: true,\n              color: \"teal\",\n              radius: \"md\",\n              style: {\n                width: \"10rem\",\n                letterSpacing: \"0.07rem\"\n              },\n              children: \"add quote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      position: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setOpened(true),\n        uppercase: true,\n        color: \"teal\",\n        radius: \"md\",\n        style: {\n          width: \"12rem\",\n          letterSpacing: \"0.07rem\",\n          position: \"relative\",\n          top: \"1.5rem\"\n        },\n        children: \"Add new quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddQuote, \"k2iDDqkJRiDp7NX4bfWWNcZF4Rk=\");\n_c = AddQuote;\nexport default AddQuote;\nvar _c;\n$RefreshReg$(_c, \"AddQuote\");","map":{"version":3,"names":["React","useEffect","useState","axios","Modal","Button","Group","TextInput","Box","toast","AddQuote","render","opened","setOpened","userInput","setUserInput","content","author","tags","handleNewQuote","event","preventDefault","post","split","headers","Authorization","localStorage","getItem","then","response","prev","setTimeout","icon","style","borderRadius","backgroundColor","color","boxShadow","catch","error","minWidth","target","value","display","justifyContent","width","letterSpacing","position","top"],"sources":["C:/Users/computer/Desktop/QuotesApp/client/src/components/modals/AddQuote.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal, Button, Group, TextInput, Box } from \"@mantine/core\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst AddQuote = ({ render }) => {\r\n  const [opened, setOpened] = useState(false);\r\n  const [userInput, setUserInput] = useState({\r\n    content: \"\",\r\n    author: \"\",\r\n    tags: \"\",\r\n  });\r\n  const handleNewQuote = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\r\n        `http://localhost:8000/quotes`,\r\n        {\r\n          content: userInput.content,\r\n          author: userInput.author,\r\n          tags: userInput.tags.split(\",\"),\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        render((prev) => !prev);\r\n        // console.log(response.data);\r\n        setTimeout(\r\n          () =>\r\n            setUserInput({\r\n              content: \"\",\r\n              author: \"\",\r\n              tags: \"\",\r\n            }),\r\n          100\r\n        );\r\n        setTimeout(() => setOpened(false), 200);\r\n        toast(\"Successfully added a new Quote!\", {\r\n          icon: \"🎉\",\r\n          style: {\r\n            borderRadius: \"0.8rem\",\r\n            backgroundColor: \"#4e7768\",\r\n            color: \"#f0fffa\",\r\n            boxShadow:\r\n              \"rgba(0, 0, 0, 0.6) 0px 4px 6px -1px, rgba(0, 0, 0, 0.2) 0px 2px 4px -1px\",\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        render((prev) => !prev);\r\n        // console.log(error.response.data)\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [render]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        opened={opened}\r\n        onClose={() => setOpened(false)}\r\n        title=\"Add a new Quote\"\r\n      >\r\n        <Box sx={{ minWidth: 340 }} mx=\"auto\">\r\n          <form onSubmit={handleNewQuote}>\r\n            <TextInput\r\n              withAsterisk\r\n              label=\"Content\"\r\n              placeholder=\"Enter the Content of the Quote\"\r\n              value={userInput.content}\r\n              onChange={(event) =>\r\n                setUserInput((prev) => ({\r\n                  ...prev,\r\n                  content: event.target.value,\r\n                }))\r\n              }\r\n              required\r\n            />\r\n            <TextInput\r\n              withAsterisk\r\n              label=\"Author\"\r\n              placeholder=\"Enter the Author of the Quote\"\r\n              value={userInput.author}\r\n              onChange={(event) =>\r\n                setUserInput((prev) => ({\r\n                  ...prev,\r\n                  author: event.target.value,\r\n                }))\r\n              }\r\n              required\r\n            />\r\n            <TextInput\r\n              withAsterisk\r\n              label=\"Tags\"\r\n              placeholder=\"Enter the Tags of the Quote\"\r\n              value={userInput.tags}\r\n              onChange={(event) =>\r\n                setUserInput((prev) => ({\r\n                  ...prev,\r\n                  tags: event.target.value,\r\n                }))\r\n              }\r\n              required\r\n            />\r\n            <Group\r\n              position=\"right\"\r\n              mt=\"xl\"\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              <Button\r\n                type=\"submit\"\r\n                uppercase\r\n                color=\"teal\"\r\n                radius=\"md\"\r\n                style={{ width: \"10rem\", letterSpacing: \"0.07rem\" }}\r\n              >\r\n                add quote\r\n              </Button>\r\n            </Group>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n\r\n      <Group position=\"center\">\r\n        <Button\r\n          onClick={() => setOpened(true)}\r\n          uppercase\r\n          color=\"teal\"\r\n          radius=\"md\"\r\n          style={{\r\n            width: \"12rem\",\r\n            letterSpacing: \"0.07rem\",\r\n            position: \"relative\",\r\n            top: \"1.5rem\",\r\n          }}\r\n        >\r\n          Add new quote\r\n        </Button>\r\n      </Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddQuote;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}